name: Publish to NuGet

on:
  release:
    types:
      - created

jobs:
  publish:
    name: Publish to NuGet
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up .NET
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x' # Match your .NET version

      # Restore dependencies
      - name: Restore dependencies
        run: |
          dotnet restore ./src/NomSol.Hangfire.JobManager.Core/NomSol.Hangfire.JobManager.Core.csproj 
          dotnet restore ./src/NomSol.Hangfire.JobManager.SqlServer/NomSol.Hangfire.JobManager.SqlServer.csproj

      # Build the projects
      - name: Build the projects
        run: |
          dotnet build ./src/NomSol.Hangfire.JobManager.Core/NomSol.Hangfire.JobManager.Core.csproj --configuration Release --no-restore
          dotnet build ./src/NomSol.Hangfire.JobManager.SqlServer/NomSol.Hangfire.JobManager.SqlServer.csproj --configuration Release --no-restore

      # Pack the projects
      - name: Pack the projects
        run: |
          dotnet pack ./src/NomSol.Hangfire.JobManager.Core/NomSol.Hangfire.JobManager.Core.csproj --configuration Release --output ./artifacts --version-suffix ${{ github.event.release.tag_name }}
          dotnet pack ./src/NomSol.Hangfire.JobManager.SqlServer/NomSol.Hangfire.JobManager.SqlServer.csproj --configuration Release --output ./artifacts --version-suffix ${{ github.event.release.tag_name }}

      # Push packages to NuGet
      - name: Push to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          dotnet nuget push ./artifacts/*.nupkg --source https://api.nuget.org/v3/index.json --api-key $NUGET_API_KEY
